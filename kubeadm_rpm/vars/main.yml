#dist_type: "ubuntu"
dist_type: "{{ 'ubuntu' if ansible_distribution == 'Ubuntu' else 'rpm_files' if ansible_distribution == 'CentOS' }}"
K8S_CNI: "calico"
# IMG_REGISTRY: "localhost:5000"
# Aibot 이미지 버전
AIBOT_VER: "0.1.19"
# INSTALL RESOURCE 위치
LOCAL_PATH:
  BASE: 
  PACKAGES: 
# MARIA_SHELL
TIMEOUT: 360 
INTERVAL: 10
START_TIME: $(date +%s)
DELAY: 0.1
# ARGOCD 연동 정보
CLUSTER_IP: "https://kubernetes.default.svc" #추후 수정 예정
ARGO_USER: "admin"
ARGO_PASSWORD: "admin12341234"
ARGO_CONNECTED_SCM: "{{ GITEA_URL }}:{{ GITEA_PORT}}/gitea/manifest.git"
# PSQL PASSWD
PGPASSWD: "postgres12341234"
# 내부 GITEA 연동
GITEA_USER: "gitea"
GITEA_PASSWD: "admin12341234"
GITEA_URL: 
GITEA_PORT: "3000"
GITEA_DIR: 
# 다중 컨트롤 노드 시, 연결 부
CONTROL_NODE_IP: 
# 내부 Nexus Repo
HELM_PORT: "8081"
REGISTRY_PORT: "5000"
REGISTRY_URL: 
REGISTRY_ID: "admin"
REGISTRY_PASSWD: "admin12341234"
NEXUS_DIR: 
NEXUS_CERT_FILE: "{{ NEXUS_DIR }}/cert.pem"
NEXUS_KEY_FILE: "{{ NEXUS_DIR )}}/key.pem"
DOCKER_CONFIG: /etc/docker/daemon.json
# 단일 컨트롤 노드 시, MASTER
MASTER_NODE_IP: 
#S3_PATH_BASE: "s3{{ ':' }}//s3-onebox-test-01-repository-01"
NET_CONF_DIR: /etc/NetworkManager/conf.d
NET_CONF_FILE: "{{ NET_CONF_DIR }}/rke2-canal.conf"
RANCHER_ADMIN_PASSWORD: "admin12341234"
MARIADB_ROOT_PASSWORD: "admin12341234"
MYSQL_PASSWORD: "admin12341234"
## variables for 08_configure_registry
REGISTRY_CONFIG:
  # Docker
  - DIR: /etc/docker
    FILE: daemon.json
    CONTENT: |
      {
        "registry-mirrors": ["http://{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"],
        "insecure-registries": ["{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"]
      }
  # RKE2
  - DIR: /etc/rancher/rke2
    FILE: registries.yaml
    CONTENT: |
      mirrors:
        docker.io:
          endpoint:
            - "http://{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"
        quay.io:
          endpoint:
            - "http://{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"
        "{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}":
          endpoint:
            - "http://{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"
      configs:
        "{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}":
          auth:
            username: "{{ REGISTRY_ID }}"
            password: "{{ REGISTRY_PASSWD }}"
          tls:
            insecure_skip_verify: true
  # containerd
  - DIR: /etc/containerd
    FILE: config.toml
    CONTENT: |
      disabled_plugins = []
      [plugins."io.containerd.grpc.v1.cri".registry]
        [plugins."io.containerd.grpc.v1.cri".registry.mirrors]
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."docker.io"]
            endpoint = ["http://{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"]
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."quay.io"]
            endpoint = ["http://{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"]
          [plugins."io.containerd.grpc.v1.cri".registry.mirrors."{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"]
            endpoint = ["http://{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}"]
        [plugins."io.containerd.grpc.v1.cri".registry.configs]
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}".auth]
            username = "{{ REGISTRY_ID }}"
            password = "{{ REGISTRY_PASSWD }}"
          [plugins."io.containerd.grpc.v1.cri".registry.configs."{{ REGISTRY_URL }}:{{ REGISTRY_PORT }}".tls]
            insecure_skip_verify = true
CONFIG_TOOL_FILES_M:
  - { SRC: "{{ LOCAL_PATH.PACKAGES }}/k9s/k9s", DEST: k9s }  # k9s
  - { SRC: "{{ LOCAL_PATH.PACKAGES }}/default/jq-linux-amd64", DEST: jq }  # jq
  - { SRC: "{{ LOCAL_PATH.PACKAGES }}/helm/linux-amd64/helm", DEST: helm }  # helm
CONFIG_TOOL_FILES_W:
  - { SRC: "{{ LOCAL_PATH.PACKAGES }}/k9s/k9s", DEST: k9s }  # k9s
  - { SRC: "{{ LOCAL_PATH.PACKAGES }}/default/jq-linux-amd64", DEST: jq }  # jq
