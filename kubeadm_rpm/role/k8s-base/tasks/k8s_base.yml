---
# tasks file for container-runtimes
- name: copy host file
  copy:
    src: /etc/hosts
    dest: /etc/hosts
  tags:
    - k8s_base
  
- name: swap off
  shell: swapoff -a
  tags:
    - k8s_base

- name: rewrite fstab
  shell: sed -i '/swap/s/^/#/' /etc/fstab
  tags:
    - k8s_base

- name: net.ipv4.ip_forward=1
  shell: | 
    tee /etc/modules-load.d/containerd.conf <<EOF
    overlay
    br_netfilter
    EOF
  tags:
    - k8s_base



- name: modprobe br_netfilter
  shell: "modprobe {{ item }}"
  with_items: 
    - br_netfilter
    - overlay
  tags:
    - k8s_base

- name: sysctl net bridge
  shell: |
    tee /etc/sysctl.d/kube.conf <<EOT
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    net.ipv4.ip_forward = 1
    EOT
  tags:
    - k8s_base

- name: apply sysctl
  shell: sysctl --system
  tags:
    - k8s_base
  
- name: configure cgroup
  shell: |
    containerd config default | sudo tee /etc/containerd/config.toml >/dev/null 2>&1
    sudo sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml

- name: disble Firewalld
  shell: ufw disable
  when: "{{ dist_type }} == 'ubuntu'"
  tags:
    - k8s_base

- name: disble Firewalld
  shell: ufw disable
  when: "{{ dist_type }} == 'rpm_files'"
  tags:
    - k8s_base    

- name: Cofigure DNS default
  shell: sed -i '/\[main\]/a dns=default' /etc/NetworkManager/NetworkManager.conf
  tags:
    - k8s_base

- name: unlink resolv.conf
  shell: unlink /etc/resolv.conf || true
  tags:
    - k8s_base

- name: touch resolv.conf
  file:
    path: /etc/resolv.conf
    state: touch
  tags:
    - k8s_base

- name: mkdir kubelet service_d
  file:
    path: /etc/systemd/system/kubelet.service.d/
    state: directory
  tags:
    - k8s_base

- name: Copy kubelet serviced
  copy:
    src: config/kubelet.service
    dest: /etc/systemd/system/kubelet.service
  tags:
    - k8s_base

- name: Copy 10-kubeamd.conf
  copy:
    src: config/10-kubeadm.conf
    dest: /etc/systemd/system/kubelet.service.d/10-kubeadm.conf
  tags: 
    - k8s_base

- name: copy config.toml
  template:
    src: config.toml
    dest: /etc/containerd/config.toml
  tags:
    - k8s_base

- name: touch debug.toml
  file:
    path: /etc/containerd/debug.toml
    state: touch
  tags:
    - k8s_base

- name: set-hostname
  hostname:
    name: "{{ inventory_hostname }}"
  tags:
    - k8s_base

- name: set default ipv4
  shell: "ip route add default via {{ ansible_enp0s8.ipv4.address }}" # {{ ansible_default_ipv4.address }}
  tags:
    - k8s_base
    - config

- name: copy /etc/resolv.conf
  copy:
    src: /etc/resolv.conf
    dest: /etc/resolv.conf
  tags:
    - k8s_base
    - config

- name: containerd restart
  systemd:
    name: containerd
    state: restarted
    enabled: yes
  tags:
    - k8s_base

- name: containerd config dump
  shell: containerd config dump
  tags:
    - k8s_base

- name: 1-7-2. Telnet configuration and install
  shell: "{{ item }}"
  args:
    chdir: "{{ LOCAL_PATH.PACKAGES }}/default/inetutils-2.4/"
  with_items:
    - "./configure --prefix=/usr/local"
    - make
    - sudo make install
  tags:
    - masters_init
    - config-kubetools
  
- name: 1-7-3. Install longhorn deps
  dnf:
    name: "{{ item }}"
    state: present
  with_items:
    - "{{ LOCAL_PATH.PACKAGES }}/longhorn/isns-utils-libs-0.99-1.el8.x86_64.rpm"
    - "{{ LOCAL_PATH.PACKAGES }}/longhorn/iscsi-initiator-utils-6.2.1.4-8.git095f59c.el8_8.x86_64.rpm, {{ LOCAL_PATH.PACKAGES }}/longhorn/iscsi-initiator-utils-iscsiuio-6.2.1.4-8.git095f59c.el8_8.x86_64.rpm"
  tags:
    - masters_init
    - config-kubetools

# DB 배포에 필요한 .sql .bak 파일을 마스터 노드로 전달합니다.
- name: 4-2-2. Download MariaDB client, Dump, DB Schema file
  copy:
    src: "{{ item.src}}" 
    dest: "{{ item.dest }}"
  with_items:
    - { src: "{{ LOCAL_PATH.BASE }}/db/mariadb_client", dest: /root/ }
    - { src: "{{ LOCAL_PATH.PACKAGES }}/ansible/git-core-2.39.3-1.el8_8.x86_64.rpm", dest: /root/git-core-2.39.3-1.el8_8.x86_64.rpm }
  tags:
    - oss_setup
    - set_resource

  # Pod 접근없이 mariaDB를 핸들링 할 수 있도록 Client 명령어들을 설치합니다.
- name: 4-2-3. Install MariaDB client in private
  dnf:
    name: "{{ item }}"
    state: present
    disable_gpg_check: yes
  with_items:
    - /root/mariadb_client/libpmem-1.6.1-1.el8.x86_64.rpm
    - /root/mariadb_client/perl-DBI-1.641-4.module+el8.6.0+891+677074cb.x86_64.rpm
    - "/root/mariadb_client/MariaDB-client-10.6.10-1.el8.x86_64.rpm, /root/mariadb_client/MariaDB-common-10.6.10-1.el8.x86_64.rpm, /root/mariadb_client/MariaDB-shared-10.6.10-1.el8.x86_64.rpm"
    - "/root/git-core-2.39.3-1.el8_8.x86_64.rpm"
  tags:
    - oss_setup
    - set_resource