---
# tasks file for container-runtimes
- name: dpkg configure
  shell: "dpkg --configure -a"
  tags:
    - k8s_tools

- name: Install *.deb files
  shell: printf "Y\n" | dpkg -i /tmp/3_k8s_tools/*.deb
  tags:
    - k8s_tools
# - name: Index *.deb file
#   find:
#     path: "/tmp/3_kube_tools"
#     file_type: file
#     patterns: "*.deb"
#   register: deb_array
#   tags:
#     - k8s_tools

# - name: result
#   debug:
#     msg: "{{ deb_array.files | map(attribute='path') | list }}"
#   tags:
#     - k8s_tools

# - name: install Deb files
#   apt:
#     deb: "{{ item }}"
#     state: present
#   with_items:
#     - "{{ deb_array.files | map(attribute='path') | list }}"
#   ignore_errors: yes
#   tags:
#     - k8s_tools

- name: docker login
  shell: docker login {{ CONTROL_REGISTRY }} --username admin --password admin1234
  tags:
    - k8s_tools 

- name: kube-completion step
  shell: |
    kubectl completion bash | sudo tee /etc/bash_completion.d/kubectl > /dev/null
    echo 'alias k=kubectl' >>~/.bashrc
    echo 'complete -o default -F __start_kubectl k' >>~/.bashrc
  tags:
    - k8s_tools

- name: copy crictl.yaml
  copy:
   src: config/crictl.yaml
   dest: /etc/crictl.yaml
   mode: 0644
  tags:
    - k8s_tools
    - registry

- name: copy image_saves
  template:
   src: images_pull
   dest: /root/images_pull
   mode: 0755
  tags:
    - k8s_tools
    - registry

# - name: copy image_saves
#   copy:
#    src: config/images_pull
#    dest: /root/images_pull
#    mode: 0755
#   tags:
#     - k8s_tools
#     - registry
- name: daemo-reload
  shell: systemctl daemon-reload
  tags:
    - k8s_base 
  
- name: resetard systemd
  systemd:
    name: "{{ item }}"
    state: restarted
    enabled: yes
  with_items: 
    - containerd
    - kubelet
  tags:
    - k8s_base

- name : run image_saves
  shell: /root/images_pull
  tags:
    - k8s_tools
    - registry

- name: run registry
  shell: docker run -d -p 5000:5000 --restart=always --name registry {{ CONTROL_REGISTRY }}/registry:2.8.2
  tags:
    - k8s_base
    - registry