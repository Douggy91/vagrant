apiVersion: apps/v1
kind: Deployment
metadata:
  name: tts-cck-deployment # 개발자 가이드 내 naming rule 을 따르는 deployment name 정의
  #namespace: tts-aic # 개발자 가이드 내 namespace 부분 참조
  labels:
    solution: tts
spec:
  replicas: 1
  selector:
    matchLabels:
      solution: tts
  template:
    metadata:
      # 동일 문서 13줄의 matchLabels에 정의된 label과 동일한 label 정의 필수
      labels:
        solution: tts
    spec:
#    #add0711
#      affinity:
#    ##add0816
#        nodeAffinity:
#          requiredDuringSchedulingIgnoredDuringExecution:
#            nodeSelectorTerms:
#              - matchExpressions:
#                  - key: node
#                    operator: In
#                    values:
#                      - aictep
#                      - aicwup
#                  - key: type
#                    operator: In
#                    values:
#                      - cpu
#                  - key: com
#                    operator: In
#                    values:
#                      - jjb
#                      - aicwup
#    ##
#        podAntiAffinity:
#          preferredDuringSchedulinglgnoredDuringExecution:
#          - podAffinityTerm:
#            labelSelector:
#              matchExpressions:
#              - key: soultion
#                operator: In
#                values:
#                - tts
#            topologyKey: topology.kubernetes.io/zone
#          weight: 100
#     #
      containers:
      - name: tts
        # 개발자 가이드 내 image tagging 부분 참조
        # 이미지의 통합으로 인하여 registry의 uri 변경이 있을 것 같습니다. 확인 부탁드립니다.
        image: "{{ REGISTRY_URL }}:5000/vas/tts/cck/cck:1.3.5"
        imagePullPolicy: Always
        envFrom:
        - configMapRef:
            name: tts-cck-configmap
#        livenessProbe:
#          httpGet:
#            path: /
#            port: 16791
#            scheme: HTTP
#          # 첫 번째 헬스 체크 시간까지의 지연(초)
#          initialDelaySeconds: 15
#          # 헬스 체크 간격 시간(초)
#          periodSeconds: 30
#          # 타임 아웃까지의 시간(초)
#          timeoutSeconds: 5
#          # 성공이라고 판단 하기까지의 체크 횟수
#          successThreshold: 1
#          # 실패라고 판단하기까지의 체크 횟수
#          failureThreshold: 3
        #readinessProbe 파드의 요청을 받아들일 수 있는 확인(실패 시 트레픽 차단(파드 재기동 없음))
#        readinessProbe:
#          httpGet:
#            path: /
#            port: 16791
#            scheme: HTTP
#          initialDelaySeconds: 15
#          periodSeconds: 30
#          timeoutSeconds: 5
#          successThreshold: 1
#          failureThreshold: 3
        ports:
        - containerPort: 16791
        # 동일 문서 51줄의 volumes에서 생성하는 volume mount 가능
        volumeMounts:
          - name: tts-vol
          # container 내부로의 volume mount 경로
            mountPath: /data/app/tts11/tts
        resources:
          requests:
            #memory: "20Gi"
            memory: "18Gi"
            cpu: "4"
          limits:
            #memory: "20Gi"
            memory: "20Gi"
            #cpu: "12"  
            cpu: "8"  
#      # 개발자 가이드 내 Node 용도 별 Taint 정보 참조
#      tolerations:
#      - key: "node"
#        operator: "Equal"
#        # value 부분에 해당하는 taint 정보 입력 필수
#        value: "aictep"
#        effect: "NoSchedule"
#        ##del0816
#      #nodeSelector:
#        #com: shb
#        ##
      nodeSelector:
        application/instance-type: vas-tts
      # pvc를 통한 volume 생성
      volumes:
#      #add0711
#      - name: kms-config
#        configMap:
#          name: kms-configmap
#      - name: kms-secrt 
#        secret:
#          secretName: kms-secret
#      #
      - name: tts-vol
        persistentVolumeClaim:
          claimName: tts-cck-pvc