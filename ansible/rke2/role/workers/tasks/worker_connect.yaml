- name: 4-0-1. Copy Kernel Params
  copy:
    src: sysctl.conf
    dest: /etc/sysctl.conf
  tags:
    - worker-connect
    - system-params-worker

- name: 4-0-2. apply Kernel Params
  shell: |
    sysctl -p /etc/sysctl.conf
  tags:
    - worker-connect
    - system-params-worker

## 07_install_configure_rke2
- name: 4-1-1. Uninstall RKE2
  shell: rke2-uninstall.sh
  tags:
    - worker-connect
    - rke2-init-worker

- name: 4-1-2. Install and set RKE2
  shell: INSTALL_RKE2_TYPE=agent INSTALL_RKE2_ARTIFACT_PATH=/root/rke2-artifacts INSTALL_RKE2_SYSTEM_DEFAULT_REGISTRY="{{ REGISTRY_URL }}{{ ':' }}5000" sh /root/rke2-artifacts/install.sh
  tags:
    - worker-connect
    - rke2-init-worker

## 08_configure_registry
- name: 4-1-3. Create directories(Docker, RKE2, containerd)
  file:
    path: "{{ item.DIR }}"
    state: directory
  with_items: "{{ REGISTRY_CONFIG }}"
  tags:
    - worker-connect
    - rke2-init-worker

- name: 4-1-4. Set private repo for (Docker, RKE2, containerd)
  copy:
    dest: "{{ item.DIR }}/{{ item.FILE }}"
    content: "{{ item.CONTENT }}"
  with_items: "{{ REGISTRY_CONFIG }}"
  tags:
    - worker-connect
    - rke2-init-worker

## 09_configure_server
- name: 4-1-5. Make necessary directories
  file:
    path: /etc/rancher/rke2
    state: directory
  tags:
    - worker-connect
    - rke2-init-worker

- name: 4-1-6. copy token
  copy:
    src: "{{ LOCAL_PATH.BASE }}/node-token/token"
    dest: /root/node-token
  tags:
    - worker-connect
    - rke2-init-worker

- name: 4-1-7. Display the cluster token from the file and emphasize it
  shell: cat /root/node-token
  register: node_token
  tags:
    - worker-connect
    - rke2-init-worker

##토큰값 받아와서 주입
- name: 4-1-8. Add the content to the file
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      server: https://{{ CONTROL_NODE_IP }}:9345
      token: {{ node_token.stdout }} #TODO: 클러스터 토큰값 고정
      node-name: {{ inventory_hostname }}
  tags:
    - worker-connect
    - rke2-init-worker

- name: 4-1-9. Enable and start the rke2-agent service
  systemd_service:
    name: rke2-agent
    state: started
    enabled: true
  register: "check_rke2angent_state"
  tags:
    - worker-connect
    - rke2-init-worker

- name: 4-1-10. Print rke2-agent service status
  debug:
    msg: "{{ check_rke2angent_state }}"
  tags:
    - worker-connect
    - rke2-init-worker

## 10_configure_kube_tools
- name: 4-2-1. Make log directories
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - /var/log/vas
    - $HOME/.kube
  tags:
    - worker-connect
    - config-kubeconfig-worker

- name: 4-2-2. Set Up Kubeconfig
  copy:
    src: /var/lib/rancher/rke2/agent/kubelet.kubeconfig
    dest: $HOME/.kube/config
    mode: 0600
    owner: "{{ USER }}"
    remote_src: yes
  tags:
    - worker-connect
    - config-kubeconfig-worker

## 11_install_configure tools
- name: 4-2-3. Copy configuration tool files
  copy:
    src: "{{ item.SRC }}"
    dest: "/usr/local/bin/{{ item.DEST }}"
    mode: +x
    remote_src: yes
  with_items: "{{ CONFIG_TOOL_FILES_W }}"
  tags:
    - worker-connect
    - config-kubeconfig-worker

- name: 4-2-4. Enable iscsid
  systemd_service:
    name: iscsid
    state: started
    enabled: true
  tags:
    - worker-connect
    - config-kubeconfig-worker

- name: 4-2-5. configuration environment
  lineinfile:
    path: $HOME/.bashrc
    line: "{{ item }}"
  with_items:
    - "export PATH=$PATH:/var/lib/rancher/rke2/bin:/usr/local/bin"
    - "export CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml"
    - "alias k=kubectl"
  tags:
    - worker-connect
    - config-kubeconfig-worker

- name: 4-2-6. Source bashrc
  shell: source $HOME/.bashrc
  tags:
    - worker-connect
    - config-kubeconfig-worker

## 12 label node
- name: 4-2-7. set hostname
  hostname: 
    name: "{{ inventory_hostname }}"
  tags:
    - worker-connect
    - config-kubeconfig-worker