## 02_download_resources
- name: 2-0-1. Copy Kernel Params
  copy:
    src: sysctl.conf
    dest: /etc/sysctl.conf
  tags:
    - masters-init
    - system-params-init

- name: 2-0-2. apply Kernel Params
  shell: |
    sysctl -p /etc/sysctl.conf
  tags:
    - masters-init
    - system-params-init
    
## 07_install_configure_rke2
- name: 2-1-1. Uninstall RKE2
  shell: rke2-uninstall.sh
  tags:
    - masters_init
    - rke2-init

- name: 2-1-2. Install and set RKE2
  shell: INSTALL_RKE2_TYPE=server INSTALL_RKE2_ARTIFACT_PATH=/root/rke2-artifacts INSTALL_RKE2_SYSTEM_DEFAULT_REGISTRY="{{ REGISTRY_URL }}{{ ':' }}5000" sh /root/rke2-artifacts/install.sh
  tags:
    - masters_init
    - rke2-init

## 08_configure_registry
- name: 2-1-3. Create directories(Docker, RKE2, containerd)
  file:
    path: "{{ item.DIR }}"
    state: directory
  with_items: "{{ REGISTRY_CONFIG }}"
  tags:
    - masters_init
    - rke2-init

- name: 2-1-4. Set private repo for (Docker, RKE2, containerd)
  copy:
    dest: "{{ item.DIR }}/{{ item.FILE }}"
    content: "{{ item.CONTENT }}"
  with_items: "{{ REGISTRY_CONFIG }}"
  tags:
    - masters_init
    - rke2-init

## 09_configure_server
- name: 2-1-5. Make necessary directories
  file:
    path: /etc/rancher/rke2
    state: directory
  tags:
    - masters_init
    - rke2-init

- name: 2-1-6. Add the content to the file
  copy:
    dest: /etc/rancher/rke2/config.yaml
    content: |
      node-name: {{ inventory_hostname }}
  tags:
    - masters_init
    - rke2-init

- name: 2-1-7. Enable and start the rke2-server service
  systemd_service:
    name: rke2-server
    state: started
    enabled: true
  register: "check_rke2server_state"
  tags:
    - masters_init
    - rke2-init

- name: 2-1-8. Print rke2-server service status
  debug:
    msg: "{{ check_rke2server_state }}"
  tags:
    - masters_init
    - rke2-init

## 10_configure_kube_tools
- name: 2-2-1. Make log directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - /var/log/vas
    - $HOME/.kube
    - "/home/{{ USER }}/.kube"
  tags:
    - masters_init
    - config-kubeconfig

- name: 2-2-2. Set Up Kubeconfig
  copy:
    src: /etc/rancher/rke2/rke2.yaml
    dest: "{{ item }}"
    mode: 0600
    owner: "{{ USER }}"
    remote_src: yes
  with_items:
    - $HOME/.kube/config
    - "/home/{{ USER }}/.kube/config"
  tags:
    - masters_init
    - config-kubeconfig

- name: 2-3-1. Display the cluster token from the file and emphasize it
  shell: cat /var/lib/rancher/rke2/server/node-token
  register: node_token
  tags:
    - masters_init
    - prepare-connect

- name: 2-3-2. Print node token
  debug:
    msg: "Cluster token{{ ':' }} {{ node_token.stdout }}"
  tags:
    - masters_init
    - prepare-connect

- name: 2-3-3. Copy node token from the master to the controller
  fetch:
    src: "/var/lib/rancher/rke2/server/token"
    dest: "{{ LOCAL_PATH.BASE }}/node-token/token"
    flat: yes
  tags:
    - masters_init
    - prepare-connect

## 11_install_configure tools
- name: 2-4-1. Copy configuration tool files
  copy:
    src: "{{ item.SRC }}"
    dest: "/usr/local/bin/{{ item.DEST }}"
    mode: +x
    remote_src: yes
  with_items: "{{ CONFIG_TOOL_FILES_M }}"
  tags:
    - masters_init
    - config-kubetools-init
  
- name: 2-4-2. Enable iscsid
  systemd_service:
    name: iscsid
    state: started
    enabled: true
  tags:
    - masters_init
    - config-kubetools-init
  
- name: 2-4-3. configuration environment
  lineinfile:
    path: "{{ item.path }}"
    line: "{{ item.line }}"
  with_items:
    - {path: "$HOME/.bashrc" , line: "export PATH=$PATH:/var/lib/rancher/rke2/bin:/usr/local/bin"}
    - {path: "$HOME/.bashrc" , line: "export CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml"}
    - {path: "$HOME/.bashrc" , line: "alias k=kubectl"}
    - {path: "/home/{{ USER }}/.bashrc" , line: "export PATH=$PATH:/var/lib/rancher/rke2/bin:/usr/local/bin"}
    - {path: "/home/{{ USER }}/.bashrc" , line: "export CRI_CONFIG_FILE=/var/lib/rancher/rke2/agent/etc/crictl.yaml"}
    - {path: "/home/{{ USER }}/.bashrc" , line: "alias k=kubectl"}
  tags:
    - masters_init
    - config-kubetools-init
  
- name: 2-4-4. Source bashrc
  shell: "source {{ item }}"
  with_items:
    - $HOME/.bashrc
    - "/home/{{ USER }}/.bashrc"
  tags:
    - masters_init
    - config-kubetools-init
  
- name: 2-4-5. Install cert manager
  shell: "/var/lib/rancher/rke2/bin/kubectl apply -f {{ LOCAL_PATH.BASE }}/yaml/cert-manager.yaml"
  tags:
    - masters_init
    - config-kubetools-init
  
- name: 2-4-6. Pause for 1 minute to run cert-manager
  pause:
    minutes: 1
    prompt: "Please wait 1 min for run cert-manager service"
  tags:
    - masters_init
    - config-kubetools-init
  
- name: 2-4-7. Install rancher
  shell: /var/lib/rancher/rke2/bin/kubectl apply -f {{ LOCAL_PATH.BASE }}/yaml/cattle-system-ns.yaml
  tags:
    - masters_init
    - config-kubetools-init

- name: 2-4-8. Copy longhorn files
  copy: 
    src: longhorn.yaml
    dest: "{{ LOCAL_PATH.BASE }}/yaml/longhorn.yaml"
  tags:
    - masters_init
    - config-kubetools-init

- name: 2-4-9. Copy longhorn files
  shell: |
    sed -i 's,REGISTRYIP,{{ REGISTRY_URL }}:{{ REGISTRY_PORT }},g' {{ LOCAL_PATH.BASE }}/yaml/longhorn.yaml 
  tags:
    - masters_init
    - config-kubetools-init


- name: 2-4-10. Install longhorn
  shell: "/var/lib/rancher/rke2/bin/kubectl apply -f {{ LOCAL_PATH.BASE }}/yaml/longhorn.yaml"
  tags:
    - masters_init
    - config-kubetools-init

- name: 2-4-11. set hostname
  hostname: 
    name: "{{ inventory_hostname }}"
  tags:
    - masters_init
    - config-kubetools-init
